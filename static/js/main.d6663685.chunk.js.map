{"version":3,"sources":["components/form/Form.module.css","pages/home/HomePage.jsx","components/form/Form.jsx","redux/auth-reducer.js","pages/registration/Registration.jsx","pages/login/Login.jsx","redux/administration-reducer.js","components/administration/HideDisplayColForm.jsx","components/administration/ColorChangeForm.jsx","pages/administration/Administration.jsx","components/navbar/Navbar.jsx","redux/users-reduser.js","components/table/UsersTable.jsx","pages/users/AllUsers.jsx","pages/users/ActiveUsers.jsx","pages/users/UserInfo.jsx","App.js","serviceWorker.js","redux/redux-store.js","index.js"],"names":["module","exports","form","HomePage","props","document","title","react_default","a","createElement","className","Form","_useState","useState","_useState2","Object","slicedToArray","userEmail","setUserEmail","_useState3","_useState4","userPassword","setUserPassword","_useState5","_useState6","emailValidationError","setEmailValidationError","_useState7","_useState8","passwordValidationError","setPasswordValidationError","onInputChangeHandler","e","preventDefault","currentTarget","name","value","formName","s","onSubmit","htmlFor","type","id","aria-describedby","onChange","onBlur","match","placeholder","length","initialState","email","password","isLoged","localStorage","getItem","isAuth","authReducer","state","arguments","undefined","action","setItem","data","objectSpread","isEmailExists","isPasswordExists","alert","connect","auth","dispatch","registerUser","registerUserAction","parseInt","form_Form","history","push","loginUser","react_router","to","activeColums","column","isActive","columsColors","color","administrationReducer","newState","map","col","colorState","HideDisplayColForm","onChangeHandler","target","key","checked","concat","ColorChangeForm","defaultValue","administration","columnDisplayToggle","columnTextColorChange","administration_HideDisplayColForm","administration_ColorChangeForm","userLogout","react_router_dom","data-toggle","data-target","aria-controls","aria-expanded","aria-label","onClick","users","userInfo","isActiveToggle","userId","usersReducer","toConsumableArray","find","x","user","UsersTable","onCheckboxChange","columns","field","hidden","render","rowData","style","cellStyle","searchable","activeUsers","sorting","age","dist_default","AllUsers","this","getUsers","table_UsersTable","React","Component","usersPage","ActiveUsers","filter","el","UserInfo","params","getUserInfo","_this$props$userInfo","surname","App","navbar_Navbar","exact","path","component","Registration","Login","Administration","Boolean","window","location","hostname","reducers","combineReducers","store","createStore","ReactDOM","es","src_App","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.d6663685.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"Form_form__cvyS-\"};","import React from 'react';\n\n\nfunction HomePage(props) {\n  document.title = \"Task description\";\n  return (\n      <div className='container'>\n        <h2 className=\"text-center mt-3\">Task description</h2>\n        <ol>\n          <li>Створити проект з роутером зі сторінками ‘registration’, ‘login’, ‘users’, ‘users/active’ та ‘users/:id’;</li>\n          <li>Сторінка ‘registration’ повинна мати два інпути для логіна (емейла) і пароля.\n           Введені данні повинні зберігатись в LocalStorage. У поля логін повинна бути\n           перевірка на валідність емейлу, у поля пароль на довжину пароля (6 символів).</li>\n          <li>Сторінка логін повинна мати два інпути для логіна (емейла) і пароля. У поля\n            логін повинна бути перевірка на валідність емейлу, у поля пароль на довжину\n            пароля (6 символів). Після вводу данних потрібно перевірити чи юзер\n            зареєстрований, якщо так то додати мітку в LocalStorage про вдалу\n            авторизацію. Сторінки ‘registration’, ‘login’ повинні відкриватись тільки якщо\n            юзер не залогінений.</li>\n          <li>В хедері проекту повинна бути кнопка виходу та інформація про кількість\n            знайдених елементів після пошуку, якщо поле пошуку пусте то і поля цього не\n            повинно бути.</li>\n          <li>На сторінці ‘users’ вивести всіх юзерів у таблиці. Для цієї сторінки створити мок-\n            сервіс який буде повертати масив юзерів.</li>\n          <li>При кліку по назві колонки, таблиця повинна сортуватись по цьому полю, якщо\n            поле number то від більшого до меншого або навпаки, якщо string, то по\n            алфавіту в обох напрямках, якщо boolean то по значенню.</li>\n          <li>В рядку isActive повинен бути чек-бокс який буде міняти значення на протилежне.</li>\n          <li>Вище таблиці повинен бути інпут для пошуку по усіх полях юзера. При пошуку\n            таблиця динамічно повинна відображати знайдені данні.</li>\n          <li>При кліку по рядку юзера повинна відкриватись сторінка деталей цього юзера.</li>\n          <li>На сторінці ‘users/active’ повинні відображатись тільки юзери у яких поле active\n            === true. Пошук та сортування повинні бути тільки по name та surname.</li>\n          <li>Потрібно дотримуватись суворої типізації.</li>\n        </ol>\n        <h5>Додаткове завдання (не обов&#39;язкове) :</h5>\n        <h6>Створити додаткову сторінку ‘administration’ яка буде конфігурувати таблиці.</h6>\n        <ol>\n          <li>Відключати та включати колонки.</li>\n          <li>Міняти кольори для тексту у колонках.</li>\n        </ol>\n        <p>Модель юзера: <br/>\n          <code>\n            {'{'}<br/>\n              &nbsp;&nbsp;name: string,<br/>\n              &nbsp;&nbsp;surname: string,<br/>\n              &nbsp;&nbsp;age: string,<br/>\n              &nbsp;&nbsp;isActive: boolean<br/>\n            {'}'}\n          </code>\n        </p>\n      </div>\n  )\n}\n\nexport default HomePage;\n\n","import React, { useState } from 'react';\nimport s from './Form.module.css'\n\nfunction Form(props) {\n\n    // created state values using react hooks insted of class components\n    const [userEmail, setUserEmail] = useState('');\n    const [userPassword, setUserPassword] = useState('');\n    const [emailValidationError, setEmailValidationError] = useState(null);\n    const [passwordValidationError, setPasswordValidationError] = useState(null);\n\n    const onInputChangeHandler = (e) => {\n        e.preventDefault();\n        if (e.currentTarget.name === 'email') setUserEmail(e.currentTarget.value);\n        if (e.currentTarget.name === 'password') setUserPassword(e.currentTarget.value);\n    }\n\n    const onBlurEmailValidation = (e) => {\n        e.preventDefault();\n        var mailformat = /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/;\n        e.currentTarget.value.match(mailformat) ? setEmailValidationError(false) : setEmailValidationError(true);\n    }\n\n    const onBlurPasswordValidation = (e) => {\n        e.preventDefault();\n        e.currentTarget.value.length === 6 ? setPasswordValidationError(false) : setPasswordValidationError(true);\n    }\n\n    const onSubmitHandler = (e) => {\n        e.preventDefault();\n        if (emailValidationError !== null && passwordValidationError !== null && !emailValidationError && !passwordValidationError){\n            props.onSubmit(userEmail, userPassword);\n        }\n    }\n\n  return (\n    <div>\n        <h1 className='text-center mb-3 mt-3'>{ props.formName }</h1>\n        <div className = { s.form } >\n            <form onSubmit={ onSubmitHandler }>\n              <div className=\"form-group\">\n                <label htmlFor=\"exampleInputEmail1\">Email address</label>\n                <input type=\"email\" className={ emailValidationError ? \"form-control border-danger\" : \"form-control\" }\n                  id=\"exampleInputEmail1\" aria-describedby=\"emailHelp\" onChange={ onInputChangeHandler }\n                  onBlur={ onBlurEmailValidation } name=\"email\" placeholder=\"Enter email\" />\n                { emailValidationError ?\n                    <small id=\"emailHelp\" className=\"form-text text-danger\">Enter valid email please!</small>\n                    :\n                    <small id=\"emailHelp\" className=\"form-text\" >We'll never share your email with anyone else.</small>\n                }\n              </div>\n              <div className=\"form-group\">\n                <label htmlFor=\"exampleInputPassword1\">Password</label>\n                <input type=\"password\" className={ passwordValidationError ? \"form-control border-danger\" : \"form-control\" }\n                 id=\"exampleInputPassword1\" aria-describedby=\"passwordHelp\" onChange={ onInputChangeHandler }\n                 name=\"password\" onBlur={ onBlurPasswordValidation } placeholder=\"Password\" />\n                <small id=\"passwordHelp\" className={ passwordValidationError ? \"form-text text-danger\" : \"form-text\" }>Password must be 6 chars length!</small>\n              </div>\n              <button type=\"submit\" className=\"btn btn-primary\">Submit</button>\n            </form>\n        </div>\n    </div>\n  );\n}\n\nexport default Form;\n\n","const REGISTER_USER = 'REGISTER_USER';\nconst LOGIN_USER = 'LOGIN_USER';\nconst LOGOUT_USER = 'LOGOUT_USER';\n\n\nlet initialState = {\n    email: null,\n    password: null,\n    isLoged: localStorage.getItem('isLoged'),\n    isAuth: false\n};\n\nconst authReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case REGISTER_USER:\n            localStorage.setItem('email', action.data.email);\n            localStorage.setItem('password', action.data.password);\n            localStorage.setItem('isLoged', '0');\n\n            return {\n                ...state,\n                ...action.data,\n                isLoged: '0',\n                isAuth: true\n            }\n\n        case LOGIN_USER:\n            const isEmailExists = localStorage.getItem('email') === action.data.email;\n            const isPasswordExists = localStorage.getItem('password') === action.data.password;\n            if (isEmailExists && isPasswordExists){\n                localStorage.setItem('isLoged', '1');\n                return {\n                    ...state,\n                    ...action.data,\n                    isLoged: '1'\n                }\n            }\n            alert('Wrong email or password!');\n            return state\n\n        case LOGOUT_USER:\n            localStorage.setItem('isLoged', '0');\n            return {\n                ...state,\n                isLoged: '0'\n            }\n\n        default:\n            return state;\n    }\n}\n\n\nexport const registerUserAction = (email, password) => ({type: REGISTER_USER, data: { email, password} });\nexport const loginUserAction = (email, password) => ({type: LOGIN_USER, data: { email, password} });\nexport const logoutUserAction = () => ({type: LOGOUT_USER});\n\nexport default authReducer;\n","import React from 'react';\nimport {connect} from \"react-redux\";\nimport Form from '../../components/form/Form.jsx'\nimport { registerUserAction } from '../../redux/auth-reducer.js'\n\nfunction Registration(props) {\n    document.title = \"Registration\";\n    const registerUser = (email, password) => {\n        props.history.push('/');\n        props.registerUser(email, password);\n        alert(\"You are seccesfully registered. Now you can login\");\n    }\n    return (\n         parseInt(props.isLoged) ?\n            <p className='text-center mb-3 mt-3'>You are logged in, please logout to register new account.</p>\n            :\n            <Form formName={ 'Registration' } onSubmit={ registerUser } />\n    );\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    isLoged: state.auth.isLoged\n  }\n}\n\nlet mapDispatchToProps = (dispatch) => {\n    return {\n        registerUser: (email, password) => {\n            dispatch(registerUserAction(email, password));\n        }\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Registration);\n","import React from 'react';\nimport {connect} from \"react-redux\";\nimport { Redirect } from \"react-router-dom\";\nimport Form from '../../components/form/Form.jsx';\nimport {loginUserAction} from '../../redux/auth-reducer.js'\n\n\nfunction Login(props) {\n  document.title = \"Login\";\n\n  const loginUser = (email, password) => {\n    props.loginUser(email, password);\n  }\n  return (\n    parseInt(props.isLoged) ?\n      <Redirect to='/' />\n      :\n      <Form formName={ 'Login' } onSubmit={ loginUser } />\n  );\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    isLoged: state.auth.isLoged\n  }\n}\n\nlet mapDispatchToProps = (dispatch) => {\n    return {\n        loginUser: (userEmail, userPassword) => {\n            dispatch(loginUserAction(userEmail, userPassword));\n        }\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);;\n","const COLUMN_DISPLAY_TOGGLE = 'COLUMN_DISPLAY_TOGGLE';\nconst COLUMN_TEXT_COLOR_CHANGE = 'COLUMN_TEXT_COLOR_CHANGE';\n\nlet initialState = {\n    activeColums: [{\n        id: 1,\n        column: 'name',\n        isActive: true\n    },{\n        id: 2,\n        column: 'surname',\n        isActive: true\n    },{\n        id: 3,\n        column: 'age',\n        isActive: true\n    },{\n        id: 4,\n        column: 'isActive',\n        isActive: true\n    }],\n    columsColors: [{\n        id: 1,\n        column: 'name',\n        color: 'black'\n    },{\n        id: 2,\n        column: 'surname',\n        color: 'black'\n    },{\n        id: 3,\n        column: 'age',\n        color: 'black'\n    },{\n        id: 4,\n        column: 'isActive',\n        color: 'black'\n    }]\n};\n\nconst administrationReducer = (state = initialState, action) => {\n    switch (action.type) {\n\n        case COLUMN_DISPLAY_TOGGLE:\n            const newState = state.activeColums.map(col => {\n                const column = action.data.column;\n                if (col.column === column) {\n                    col.isActive = !col.isActive;\n                }\n                return col;\n            });\n\n            return {\n                ...state,\n                activeColums: newState\n            }\n\n        case COLUMN_TEXT_COLOR_CHANGE:\n            const colorState = state.columsColors.map(col => {\n                const column = action.data.column;\n                const color = action.data.color;\n                if (col.column === column) {\n                    col.color = color;\n                }\n                return col;\n            });\n\n            return {\n                ...state,\n                columsColors: colorState\n            }\n\n        default:\n            return state;\n    }\n}\n\n\nexport const columnDisplayToggle = (column) => ({type: COLUMN_DISPLAY_TOGGLE, data: { column }});\nexport const columnTextColorChange = (column, color) => ({type: COLUMN_TEXT_COLOR_CHANGE, data: { column, color }});\n\n\nexport default administrationReducer;\n","import React from 'react';\n\nfunction HideDisplayColForm(props) {\n\n  const onChangeHandler = (e) => {\n    props.onChangeHandler(e.target.value);\n  }\n\n  return (\n          props.activeColums.map((col) => {\n            return (\n              <div className=\"form-check\" key={ col.id }>\n                <input className=\"form-check-input\" type=\"checkbox\"\n                    checked={ col.isActive } onChange={ onChangeHandler }\n                    value={ col.column } id={ `defaultCheck-${col.column}` } />\n                <label className=\"form-check-label\" htmlFor={`defaultCheck-${col.column}`}>\n                    { col.column }\n                </label>\n              </div>\n            )\n          })\n  );\n}\n\n\nexport default HideDisplayColForm;\n","import React from 'react';\n\nfunction ColorChangeForm(props) {\n\n  const onChangeHandler = (e) => {\n    props.onChangeHandler(e.target.name, e.target.value);\n  }\n\n  return (\n          props.columsColors.map((col) => {\n            return (\n              <div className=\"form-group\" key={ col.id }>\n                <label htmlFor={`color-${col.column}`}>Color for {col.column} column</label>\n                <select className=\"form-control\" name={col.column} id={`color-${col.column}`} defaultValue={col.color} onChange={ onChangeHandler } >\n                  <option value=\"black\">Black</option>\n                  <option value=\"red\">Red</option>\n                  <option value=\"green\">Green</option>\n                  <option value=\"blue\">Blue</option>\n                  <option value=\"grey\">Grey</option>\n                </select>\n              </div>)\n          })\n  );\n}\n\n\nexport default ColorChangeForm;\n","import React from 'react';\nimport { connect } from \"react-redux\";\nimport { columnDisplayToggle, columnTextColorChange } from \"../../redux/administration-reducer.js\"\nimport HideDisplayColForm from '../../components/administration/HideDisplayColForm.jsx'\nimport ColorChangeForm from '../../components/administration/ColorChangeForm.jsx'\n\nfunction Administration(props) {\n  document.title = \"Administration\";\n\n  const onHideDispColInpChangeHandler = (column) => {\n    props.columnDisplayToggle(column);\n  }\n\n  const onSelectColorChangeHandler = (column, color) => {\n    props.columnTextColorChange(column, color);\n  }\n\n  return (\n    <div className=\"container d-flex</div>\">\n      <div className=\"row justify-content-md-center\">\n        <div className=\"col-md-6 mt-3\">\n          <h4>Choose your columns</h4>\n          <HideDisplayColForm\n            activeColums={ props.activeColums }\n            onChangeHandler={ onHideDispColInpChangeHandler } />\n        </div>\n        <div className=\"col-md-6 mt-3\">\n          <h4>Select your columns text color</h4>\n          <ColorChangeForm\n            columsColors={ props.columsColors }\n            onChangeHandler={ onSelectColorChangeHandler } />\n        </div>\n      </div>\n    </div>\n  );\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    activeColums: state.administration.activeColums,\n    columsColors: state.administration.columsColors\n  }\n}\n\nlet mapDispatchToProps = (dispatch) => {\n    return {\n        columnDisplayToggle: (column) => {\n            dispatch(columnDisplayToggle(column));\n        },\n        columnTextColorChange: (column, color) => {\n            dispatch(columnTextColorChange(column, color));\n        }\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Administration);\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport {connect} from \"react-redux\";\nimport {logoutUserAction} from \"../../redux/auth-reducer.js\"\n\nfunction Navbar(props) {\n\n  const onSearchClick = (e) => {\n    e.preventDefault();\n    alert(\"Не зрозумів завдання.\\nЯкі саме елементи потрібно шукати (пункт №4).\");\n  }\n\n  return (\n    <nav className=\"navbar navbar-expand-sm navbar-dark bg-dark\">\n      <Link className=\"navbar-brand\" to='/'>React Test App</Link>\n      <button className=\"navbar-toggler collapsed\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarsExample03\" aria-controls=\"navbarsExample03\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n        <span className=\"navbar-toggler-icon\"></span>\n      </button>\n\n      <div className=\"navbar-collapse collapse\" id=\"navbarsExample03\">\n\n        { !parseInt(props.isLoged) ?\n        <ul className=\"navbar-nav mr-auto\">\n          <li className=\"nav-item\">\n            <Link className=\"nav-link\" to='/registration'>Registration</Link>\n          </li>\n          <li className=\"nav-item\">\n            <Link className=\"nav-link\" to='/login'>Login</Link>\n          </li>\n        </ul>\n          :\n        <ul className=\"navbar-nav mr-auto\">\n          <li className=\"nav-item\">\n            <Link className=\"nav-link\" to='/' onClick={ props.userLogout } >Logout</Link>\n          </li>\n          <li className=\"nav-item\">\n            <Link className=\"nav-link\" to='/users'>Users</Link>\n          </li>\n          <li className=\"nav-item\">\n            <Link className=\"nav-link\" to='/users/active'>Active users</Link>\n          </li>\n          <li className=\"nav-item\">\n            <Link className=\"nav-link\" to='/administration'>Administration</Link>\n          </li>\n        </ul>\n        }\n        <form className=\"form-inline my-2 my-md-0\">\n          <input className=\"form-control\" onClick={ onSearchClick } type=\"text\" placeholder=\"Search\" />\n        </form>\n      </div>\n    </nav>\n  );\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    isLoged: state.auth.isLoged\n  }\n}\n\nlet mapDispatchToProps = (dispatch) => {\n    return {\n        userLogout: () => {\n            dispatch(logoutUserAction());\n        }\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Navbar);\n","import * as data from '../data/users.json';\n\n\nconst GET_USERS = 'GET_USERS';\nconst GET_USER_INFO = 'GET_USER_INFO';\nconst IS_ACTIVE_TOGGLE = 'IS_ACTIVE_TOGGLE';\n\nlet initialState = {\n    users: [],\n    userInfo: null\n};\n\nconst usersReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case GET_USERS:\n            return {\n                ...state,\n                users: [...state.users, ...data.users]\n            }\n\n        case GET_USER_INFO:\n            return {\n                ...state,\n                userInfo: state.users.find(x => x.id === parseInt(action.data.userId))\n            }\n\n        case IS_ACTIVE_TOGGLE:\n            const newState = state.users.map(user => {\n                const userId = parseInt(action.data.userId);\n                if (user.id === userId) {\n                    user.isActive = !user.isActive;\n                }\n                return user;\n            });\n\n            return {\n                ...state,\n                users: newState\n            }\n\n        default:\n            return state;\n    }\n}\n\n\nexport const getUsers = () => ({type: GET_USERS});\nexport const getUserInfo = (userId) => ({type: GET_USER_INFO, data: { userId }});\nexport const isActiveToggle = (userId) => ({type: IS_ACTIVE_TOGGLE, data: { userId }});\n\n\nexport default usersReducer;\n","import React from 'react';\nimport MaterialTable from 'material-table'\nimport { Link } from 'react-router-dom';\n\n\n\nfunction UsersTable(props) {\n  const onChangeHandler = (e) => {\n    props.onCheckboxChange(e.target.value);\n  }\n\n  const columns = [{\n    title: 'Name',\n    field: 'name',\n    hidden: !props.activeColums.find(col => col.column === 'name').isActive,\n    render: rowData => <Link to={ `/users/${rowData.id}`} style={ {color: props.columsColors.find(col => col.column === 'name').color} }>{ rowData.name }</Link>\n  }, {\n    title: 'Surname',\n    field: 'surname',\n    cellStyle: {color: props.columsColors.find(col => col.column === 'surname').color },\n    hidden: !props.activeColums.find(col => col.column === 'surname').isActive\n  }, {\n    title: 'Age',\n    field: 'age',\n    cellStyle: {color: props.columsColors.find(col => col.column === 'age').color },\n    searchable: !props.activeUsers,\n    sorting: !props.activeUsers,\n    hidden: !props.activeColums.find(col => col.column === 'age').isActive,\n    render: rowData => <span className='number'>{rowData.age}</span>\n  },{\n    title: 'Is Active',\n    field: 'isActive',\n    cellStyle: {color: props.columsColors.find(col => col.column === 'isActive').color },\n    searchable: !props.activeUsers,\n    sorting: !props.activeUsers,\n    hidden: !props.activeColums.find(col => col.column === 'isActive').isActive,\n    render: rowData => (\n        <div className=\"form-check\">\n          <input className=\"form-check-input\" type=\"checkbox\"\n            checked={ rowData.isActive } onChange={ onChangeHandler }\n            value={ rowData.id } id={ `defaultCheck-${rowData.id}` } />\n          <label className=\"form-check-label\" htmlFor={`defaultCheck-${rowData.id}`}>\n            { rowData.isActive ? \"Active\" : \"Not Active\" }\n          </label>\n        </div>\n        )\n  }]\n\n  return (\n      <MaterialTable\n        data={ props.data } columns={ columns }\n        title={ props.activeUsers ? \"Active users list\" : \"All users list\" }\n      />\n  )\n}\n\nexport default UsersTable;\n","import React from 'react';\nimport { connect } from \"react-redux\";\nimport { Redirect } from \"react-router-dom\";\nimport { getUsers, isActiveToggle } from '../../redux/users-reduser.js'\nimport UsersTable from '../../components/table/UsersTable.jsx'\n\n\nclass AllUsers extends React.Component {\n  componentDidMount(){\n    if (this.props.users.length ===0){\n      this.props.getUsers();\n    }\n  }\n  render() {\n    document.title = \"All users\";\n    return (\n      parseInt(!this.props.isLoged) ?\n        <Redirect to='/' />\n        :\n        <div className='container'>\n          <h1 className='text-center mb-3 mt-3'>Users</h1>\n          <UsersTable\n            data={ this.props.users }\n            activeColums={ this.props.activeColums }\n            columsColors={ this.props.columsColors }\n            onCheckboxChange={ this.props.isActiveToggle } />\n        </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    users: state.usersPage.users,\n    isLoged: state.auth.isLoged,\n    activeColums: state.administration.activeColums,\n    columsColors: state.administration.columsColors\n  }\n}\n\nlet mapDispatchToProps = (dispatch) => {\n    return {\n        getUsers: () => {\n            dispatch(getUsers());\n        },\n        isActiveToggle: (userId) => {\n            dispatch(isActiveToggle(userId));\n        }\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AllUsers);\n","import React from 'react';\nimport { connect } from \"react-redux\";\nimport { Redirect } from \"react-router-dom\";\nimport { getUsers, isActiveToggle } from '../../redux/users-reduser.js';\nimport UsersTable from '../../components/table/UsersTable.jsx';\n\n\nclass ActiveUsers extends React.Component {\n  componentDidMount(){\n    if (this.props.users.length ===0){\n      this.props.getUsers();\n    }\n  }\n  render() {\n    document.title = \"Active users\";\n    return (\n      parseInt(!this.props.isLoged) ?\n        <Redirect to='/' />\n        :\n        <div className='container'>\n          <h1 className='text-center mb-3 mt-3'>Users</h1>\n          <UsersTable\n            activeUsers data={ this.props.users.filter(el => el.isActive) }\n            activeColums={ this.props.activeColums }\n            columsColors={ this.props.columsColors }\n            onCheckboxChange={ this.props.isActiveToggle } />\n        </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    users: state.usersPage.users,\n    isLoged: state.auth.isLoged,\n    activeColums: state.administration.activeColums,\n    columsColors: state.administration.columsColors\n  }\n}\n\nlet mapDispatchToProps = (dispatch) => {\n    return {\n        getUsers: () => {\n            dispatch(getUsers());\n        },\n        isActiveToggle: (userId) => {\n            dispatch(isActiveToggle(userId));\n        }\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ActiveUsers);\n","import React from 'react';\nimport { connect } from \"react-redux\";\nimport { getUsers, getUserInfo } from '../../redux/users-reduser.js'\n\n\n class UserInfo extends React.Component {\n\n    componentDidMount(){\n        if (this.props.users.length ===0){\n          this.props.getUsers();\n        }\n        const { match: { params } } = this.props;\n        this.props.getUserInfo(params.userId);\n    }\n\n    render() {\n        if (this.props.userInfo){\n            const { name, surname, age, isActive } = this.props.userInfo;\n            document.title = `${name} info`;\n\n            return (\n            <div className=\"container\">\n                <h1 className='text-center mb-3 mt-3' >User info</h1>\n                <p className='text-center' >Name: { name }</p>\n                <p className='text-center' >Surname: { surname }</p>\n                <p className='text-center' >Age: { age }</p>\n                <p className='text-center' >Is active: { isActive ? \"Active\" : \"Not active\" }</p>\n            </div>\n            )\n        }\n        document.title = 'No user';\n        return <p className='text-center mb-3 mt-3' >There is no user at this url</p>\n    }\n }\n\nconst mapStateToProps = (state) => {\n  return {\n    users: state.usersPage.users,\n    userInfo: state.usersPage.userInfo\n  }\n}\n\nlet mapDispatchToProps = (dispatch) => {\n    return {\n        getUsers: () => {\n            dispatch(getUsers());\n        },\n        getUserInfo: (userId) => {\n            dispatch(getUserInfo(userId));\n        }\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(UserInfo);\n","import React from 'react';\nimport HomePage from './pages/home/HomePage.jsx'\nimport Registration from './pages/registration/Registration.jsx';\nimport Login from './pages/login/Login.jsx';\nimport Administration from './pages/administration/Administration.jsx'\nimport Navbar from './components/navbar/Navbar.jsx';\nimport AllUsers from './pages/users/AllUsers.jsx';\nimport ActiveUsers from './pages/users/ActiveUsers.jsx'\nimport UserInfo from './pages/users/UserInfo.jsx';\nimport { Route, Switch } from \"react-router-dom\";\n\n\nfunction App() {\n  return (\n    <div>\n      <Navbar />\n      <Route exact path='/' component={ HomePage } />\n      <Route exact path='/react-test-app' component={ HomePage } />\n      <Route exact path='/registration' component={ Registration } />\n      <Route exact path='/login' component={ Login } />\n      <Route exact path='/administration' component={ Administration } />\n      <Route exact path='/users' component={ AllUsers } />\n      <Switch>\n        <Route exact path='/users/active' component={ ActiveUsers } />\n        <Route exact path='/users/:userId' component={ UserInfo } />\n      </Switch>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import {createStore, combineReducers} from \"redux\";\nimport usersReducer from \"./users-reduser.js\";\nimport authReducer from \"./auth-reducer.js\";\nimport administrationReducer from \"./administration-reducer.js\"\n\n\nlet reducers = combineReducers({\n    usersPage: usersReducer,\n    auth: authReducer,\n    administration: administrationReducer\n});\n\nlet store = createStore(reducers);\n\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { BrowserRouter } from \"react-router-dom\";\nimport {Provider} from \"react-redux\";\nimport store from \"./redux/redux-store\";\n\nReactDOM.render(\n    <BrowserRouter>\n        <Provider store={store}>\n            <App />\n        </Provider>\n    </BrowserRouter>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}